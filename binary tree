import java.util.*;
class node{
    int data;
    node left;
    node right;
}
public class Main
{
    static node root=null;
    static void preorder(node t){
        if(t==null)
           return;
        System.out.print(t.data+" ");
        preorder(t.left);
        preorder(t.right);
    }
     static void inorder(node t){
        if(t==null)
           return;
        inorder(t.left);
        System.out.print(t.data+" ");
        inorder(t.right);
    }
    static void postorder(node t){
        if(t==null)
           return;
        postorder(t.left);
        postorder(t.right);
        System.out.print(t.data+" ");
    }
    static void levelorder(){
        Queue<node> q=new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            node t=q.remove();
            System.out.print(t.data+" ");
            if(t.left!=null)
                q.add(t.left);
            if(t.right!=null)
                q.add(t.right);
        }
    }
    static void insert(){
        Scanner s=new Scanner(System.in);
        Queue<node> q=new LinkedList<>();
        System.out.println("Enter root value");
        int x=s.nextInt();
        node a=new node();
        a.data=x;
        root=a;
        q.add(a);
        while(!q.isEmpty()){
            node t=q.remove();
            System.out.println("Enter left of "+t.data);
            int x1=s.nextInt();
            if(x1>=0){
                node a1=new node();
                a1.data=x1;
                t.left=a1;
                q.add(a1);
            }
            System.out.println("Enter right of "+t.data);
            int x2=s.nextInt();
            if(x2>=0){
                node a2=new node();
                a2.data=x2;
                t.right=a2;
                q.add(a2);
            }
        }
    }
public static void main(String[] args) {
insert();
System.out.println("Level order traversal is");
levelorder();
   System.out.println("\nPre-order traversal is");
   preorder(root);
   System.out.println("\nIn-order traversal is");
   inorder(root);
   System.out.println("\nPost-order traversal is");
   postorder(root);
}
}
