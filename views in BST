import java.util.*;

class node {
    int data;
    node left;
    node right;
}

public class Main {
    static node root = null;
    static void insertBST(int x) {
        node a = new node();
        a.data = x;
        if (root == null) {
            root = a;
        } else {
            node p = root, p1 = root;
            while (p != null) {
                p1 = p;
                if (p.data > x)
                    p = p.left;
                else
                    p = p.right;
            }
            if (p1.data > x)
                p1.left = a;
            else
                p1.right = a;
        }
    }
    static void leftview() {
        if (root == null) return;
        Queue<node> q = new LinkedList<>();
        q.add(root);
        while (!q.isEmpty()) {
            int n = q.size();
            for (int i = 1; i <= n; i++) {
                node t = q.remove();
                if (i == 1)
                    System.out.print(t.data + " ");
                if (t.left != null)
                    q.add(t.left);
                if (t.right != null)
                    q.add(t.right);
            }
        }
    }
    static void rightview() {
        if (root == null) return;
        Queue<node> q = new LinkedList<>();
        q.add(root);
        while (!q.isEmpty()) {
            int n = q.size();
            for (int i = 1; i <= n; i++) {
                node t = q.remove();
                if (i == n)
                    System.out.print(t.data + " ");
                if (t.left != null)
                    q.add(t.left);
                if (t.right != null)
                    q.add(t.right);
            }
        }
    }
     static void topview() {
        if (root == null) return;
        Queue<node> q = new LinkedList<>();
        q.add(root);
        while (!q.isEmpty()) {
            int n = q.size();
            for (int i = 1; i <= n; i++) {
                node t = q.remove();
                if (i == 1)
                    System.out.print(t.data + " ");
                if (i == n)
                    System.out.print(t.data + " ");
                if (t.left != null)
                    q.add(t.left);
                if (t.right != null)
                    q.add(t.right);
            }
        }
     }
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        while (true) {
            int x = s.nextInt();
            if(x>0)
            insertBST(x);
            else
            break;
        }
        System.out.println("Left View:");
        leftview();
        System.out.println("\nRight View:");
        rightview();
        System.out.println("\nTop View:");
        topview();
    }
}
